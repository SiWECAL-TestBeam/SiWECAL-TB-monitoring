name: "Tests on dummy data"

on:
  pull_request:
  push:

jobs:
  dummy-data:
    strategy:
      matrix:
        run-name: ["dummy_run_123456"]
        SETUP: ["/cvmfs/sft.cern.ch/lcg/views/LCG_99/x86_64-ubuntu2004-gcc9-opt/setup.sh"]
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - uses: "actions/checkout@v2"
        with:
          submodules: recursive
      - uses: cvmfs-contrib/github-action-cvmfs@v2
        with:
          cvmfs_repositories: "sft.cern.ch"

      - name: "Create the dummy data"
        run: |
          source ${{ matrix.SETUP }}
          ./example/create_dummy.py --n_dat 20 --n_dat_entries 500

      - name: "Run the monitoring loop"
        run: |
          source ${{ matrix.SETUP }}
          touch example/${{ matrix.run-name }}/hitsHistogram.txt
          ./start_monitoring_run.py example/${{ matrix.run-name }}

      - name: "Check that monitoring ran without issues"
        run: |
          if [[ "$(grep -o "ERROR" data/${{ matrix.run-name }}/log_monitoring.log | wc -l)" != "0" ]]; then exit 1; fi

      - name: "Run the build.root decoration"
        run: |
          source ${{ matrix.SETUP }}
          cp data/${{ matrix.run-name }}/current_build.root data/${{ matrix.run-name }}/for_decoration.root
          touch example/${{ matrix.run-name }}/hitsHistogram.txt
          ./decorate.py example/${{ matrix.run-name }}/for_decoration.root --verbose
